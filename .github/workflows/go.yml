name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest] #[ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: Set Python command based on OS
      id: set-python-cmd
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          echo "PY_CMD=py" >> $GITHUB_ENV
        else
          echo "PY_CMD=python" >> $GITHUB_ENV
        fi

    - name: Create python3.exe for Windows
      if: runner.os == 'Windows'
      run: |
        # Create a copy of python.exe as python3.exe
        $pythonDir = "${{ env.pythonLocation }}"
        $sourcePath = Join-Path -Path $pythonDir -ChildPath "python.exe"
        $destPath = Join-Path -Path $pythonDir -ChildPath "python3.exe" 
        
        Write-Output "Copying from $sourcePath to $destPath"
        
        if (Test-Path -Path $sourcePath) {
          Copy-Item -Path $sourcePath -Destination $destPath -Force
          if (Test-Path -Path $destPath) {
            Write-Output "Created python3.exe successfully"
          } else {
            Write-Output "Failed to create python3.exe"
            exit 1
          }
        } else {
          Write-Output "Source file $sourcePath not found"
          exit 1
        }
      shell: pwsh

    - name: Install Go tools
      run: |
        go install github.com/go-python/gopy@latest
        go install golang.org/x/tools/cmd/goimports@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Install build deps
      run: |
        ${{ env.PY_CMD }} -m pip install --upgrade pip
        ${{ env.PY_CMD }} -m pip install setuptools wheel pybindgen

    # Linux: Add LD_LIBRARY_PATH
    - name: Set LD_LIBRARY_PATH for Linux
      if: runner.os == 'Linux'
      run: echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:." >> $GITHUB_ENV

    # Build library - unified command using PY_CMD
    - name: Build library
      run: |
        cd src
        ${{ env.PY_CMD }} build.py build
      env:
        LD_LIBRARY_PATH: ${{ env.LD_LIBRARY_PATH }}:. # Add current dir to path
        # Fix paths for Windows builds
        GOPY_LIBDIR: ${{ runner.os == 'Windows' && format('{0}/libs', env.pythonLocation) || '' }}
        # Fix Python version number to be just major and minor
        GOPY_PYLIB: ${{ runner.os == 'Windows' && (matrix.python-version == '3.10' && 'python310' || matrix.python-version == '3.11' && 'python311') || '' }}
        # Use forward slashes for Python path
        PYTHON_VM_PATH: ${{ runner.os == 'Windows' && format('{0}/python.exe', env.pythonLocation) || format('{0}/bin/python', env.pythonLocation) }}
        
    # Build wheel - unified command using PY_CMD
    - name: Build wheel
      run: |
        cd src
        ${{ env.PY_CMD }} build.py bdist_wheel
      env:
        LD_LIBRARY_PATH: ${{ env.LD_LIBRARY_PATH }}:. # Add current dir to path
        # Windows needs these for linking to Python libraries
        GOPY_LIBDIR: ${{ runner.os == 'Windows' && format('{0}/libs', env.pythonLocation) || '' }}
        # For Windows builds, use explicit formatting for Python version
        GOPY_PYLIB: ${{ runner.os == 'Windows' && (matrix.python-version == '3.10' && 'python310' || matrix.python-version == '3.11' && 'python311') || '' }}

    # Upload artifacts - same for all platforms
    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
        path: src/dist/*.whl

    - name: Upload compiled library
      uses: actions/upload-artifact@v4
      with:
        name: lib-${{ matrix.os }}-py${{ matrix.python-version }}
        path: src/ohbother/**/*