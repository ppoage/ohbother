name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install Go tools
      run: |
        go install github.com/go-python/gopy@latest
        go install golang.org/x/tools/cmd/goimports@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        
    - name: Debug environment
      run: |
        which gopy
        which goimports
        echo $PATH
        ls -la src/

    - name: Install build deps
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel PyBindGen

    # Change directory to src before running build.py
    - name: Build library
      run: |
        cd src
        python build.py build

    # Change directory to src before running build.py
    - name: Build wheel
      run: |
        cd src
        python build.py bdist_wheel

    # Update path to look for dist folder in src/
    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
        path: src/dist/*.whl

    # Update path to look for ohbother folder in src/
    - name: Upload compiled library
      uses: actions/upload-artifact@v4
      with:
        name: lib-${{ matrix.os }}-py${{ matrix.python-version }}
        path: src/ohbother/**/*