# python build stubs for package ohbother
# File is generated by gopy. Do not edit.
# gopy build -build-tags=GOEXPERIMENT=cgocheck2 -output=/Applications/Code/Code/GIT/ohbother/ohbother/core/_generated -no-make=true -vm=/Applications/Code/Code/GIT/ohbother/.venv/bin/python3.12 .

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_ohbother')
mod.add_include('"ohbother_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('net_HardwareAddr_CTor', retval('int64_t'), [])
mod.add_function('net_HardwareAddr_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('net_HardwareAddr_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('net_HardwareAddr_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('net_HardwareAddr_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('net_HardwareAddr_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Slice_byte_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Slice_byte_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_interface__CTor', retval('int64_t'), [])
mod.add_function('Slice_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_interface__elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_interface__subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_interface__set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_interface__append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Map_string_uint64_CTor', retval('int64_t'), [])
mod.add_function('Map_string_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_uint64_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_uint64_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('uint64_t', 'value')])
mod.add_function('Map_string_uint64_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_uint64_keys', retval('int64_t'), [param('int64_t', 'handle')])
add_checked_function(mod, 'ohbother_Logger_Debug', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_Logger_Error', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_Logger_Info', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_Logger_Warn', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
mod.add_function('ohbother_ContinuousPacketReceiver_CTor', retval('int64_t'), [])
add_checked_function(mod, 'ohbother_ContinuousPacketReceiver_GetNextPacket', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_ContinuousPacketReceiver_Close', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
mod.add_function('ohbother_MultiStreamSender_CTor', retval('int64_t'), [])
mod.add_function('ohbother_MultiStreamSender_Cfg_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamSender_Cfg_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamSender_StreamConfig_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamSender_StreamConfig_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamSender_RateLimit_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamSender_RateLimit_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamSender_Payloads_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamSender_Payloads_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'ohbother_MultiStreamSender_SetStreamConfig', None, [param('int64_t', '_handle'), param('int64_t', 'packetWorkers'), param('int64_t', 'streamCount'), param('int64_t', 'channelBuffers'), param('int64_t', 'reportInterval'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_MultiStreamSender_SetAdvancedConfig', None, [param('int64_t', '_handle'), param('bool', 'enableCPUPinning'), param('bool', 'disableOrdering'), param('int64_t', 'turnstileBurst'), param('bool', 'enableMetrics'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_MultiStreamSender_AddPayload', None, [param('int64_t', '_handle'), param('int64_t', 'payload'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_MultiStreamSender_Send', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_GetMetrics', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_IsComplete', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_GetNextResult', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_Wait', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_MultiStreamSender_GetSentCount', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_GetErrorCount', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_GetStreamConfig', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_IsOrderingEnabled', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_IsCPUPinningEnabled', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_GetTurnstileBurst', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_AreMetricsEnabled', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_MultiStreamSender_FastConvertPayloads', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'payloads')])
mod.add_function('ohbother_PacketReceiver_CTor', retval('int64_t'), [])
add_checked_function(mod, 'ohbother_PacketReceiver_Result', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_PacketReceiver_ResultNative', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ohbother_PcapConfig_CTor', retval('int64_t'), [])
mod.add_function('ohbother_PcapConfig_Iface_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PcapConfig_Iface_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('ohbother_PcapConfig_SnapLen_Get', retval('int32_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PcapConfig_SnapLen_Set', None, [param('int64_t', 'handle'), param('int32_t', 'val')])
mod.add_function('ohbother_PcapConfig_Promisc_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PcapConfig_Promisc_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('ohbother_PcapConfig_Timeout_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PcapConfig_Timeout_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PcapConfig_BufferSize_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PcapConfig_BufferSize_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PcapConfig_ImmediateMode_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PcapConfig_ImmediateMode_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('ohbother_DebugOptions_CTor', retval('int64_t'), [])
mod.add_function('ohbother_DebugOptions_Enabled_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('ohbother_DebugOptions_Enabled_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('ohbother_DebugOptions_Level_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_DebugOptions_Level_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_DebugOptions_Logger_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_DebugOptions_Logger_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_DefaultLogger_CTor', retval('int64_t'), [])
add_checked_function(mod, 'ohbother_DefaultLogger_Debug', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_DefaultLogger_Info', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_DefaultLogger_Warn', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_DefaultLogger_Error', None, [param('int64_t', '_handle'), param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
mod.add_function('ohbother_MultiStreamConfig_CTor', retval('int64_t'), [])
mod.add_function('ohbother_MultiStreamConfig_PacketWorkers_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_PacketWorkers_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamConfig_StreamCount_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_StreamCount_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamConfig_ChannelBuffers_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_ChannelBuffers_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamConfig_ReportInterval_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_ReportInterval_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamConfig_EnableCPUPinning_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_EnableCPUPinning_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('ohbother_MultiStreamConfig_DisableOrdering_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_DisableOrdering_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('ohbother_MultiStreamConfig_TurnstileBurst_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_TurnstileBurst_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_MultiStreamConfig_EnableMetrics_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('ohbother_MultiStreamConfig_EnableMetrics_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('ohbother_PacketConfig_CTor', retval('int64_t'), [])
mod.add_function('ohbother_PacketConfig_SrcMAC_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketConfig_SrcMAC_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketConfig_DstMAC_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketConfig_DstMAC_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketConfig_SrcIP_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketConfig_SrcIP_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('ohbother_PacketConfig_DstIP_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketConfig_DstIP_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('ohbother_PacketConfig_SrcPort_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketConfig_SrcPort_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketConfig_DstPort_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketConfig_DstPort_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketConfig_BPF_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketConfig_BPF_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('ohbother_PacketSendResult_CTor', retval('int64_t'), [])
mod.add_function('ohbother_PacketSendResult_Index_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketSendResult_Index_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketSendResult_TotalCount_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketSendResult_TotalCount_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketSendResult_Elapsed_Get', retval('double'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketSendResult_Elapsed_Set', None, [param('int64_t', 'handle'), param('double', 'val')])
add_checked_string_function(mod, 'ohbother_PacketSendResult_GetError', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('ohbother_PacketSequenceSender_CTor', retval('int64_t'), [])
mod.add_function('ohbother_PacketSequenceSender_Cfg_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketSequenceSender_Cfg_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketSequenceSender_RateLimit_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketSequenceSender_RateLimit_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_PacketSequenceSender_Payloads_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_PacketSequenceSender_Payloads_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'ohbother_PacketSequenceSender_AddPayload', None, [param('int64_t', '_handle'), param('int64_t', 'payload'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_PacketSequenceSender_Send', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_PacketSequenceSender_GetNextResult', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_PacketSequenceSender_IsComplete', retval('bool'), [param('int64_t', '_handle')])
mod.add_function('ohbother_AsyncResult_CTor', retval('int64_t'), [])
mod.add_function('ohbother_AsyncResult_Packets_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_AsyncResult_Packets_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'ohbother_AsyncResult_GetPackets', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ohbother_AsyncResult_GetErr', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('ohbother_BytePacket_CTor', retval('int64_t'), [])
mod.add_function('ohbother_BytePacket_Data_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_BytePacket_Data_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'ohbother_BytePacket_GetData', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ohbother_Config_CTor', retval('int64_t'), [])
mod.add_function('ohbother_Config_Pcap_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_Config_Pcap_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_Config_Packet_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_Config_Packet_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('ohbother_Config_Debug_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('ohbother_Config_Debug_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'ohbother_Config_EnableDebug', None, [param('int64_t', '_handle'), param('int64_t', 'level'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_Config_DisableDebug', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_Config_SetLogger', None, [param('int64_t', '_handle'), param('int64_t', 'logger'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_NewReceiver', retval('int64_t'), [param('int64_t', 'cfg')])
add_checked_function(mod, 'ohbother_NewMultiStreamSender', retval('int64_t'), [param('int64_t', 'cfg'), param('int64_t', 'rateLimit')])
add_checked_function(mod, 'ohbother_PacketReceiverByCount', retval('int64_t'), [param('int64_t', 'cfg'), param('int64_t', 'count'), param('double', 'timeout')])
add_checked_function(mod, 'ohbother_PacketReceiverByTime', retval('int64_t'), [param('int64_t', 'cfg'), param('double', 'duration')])
add_checked_function(mod, 'ohbother_BenchmarkReceiveAsync', retval('int64_t'), [param('int64_t', 'cfg'), param('double', 'duration')])
add_checked_function(mod, 'ohbother_NewDefaultLogger', retval('int64_t'), [param('int64_t', 'cfg')])
add_checked_function(mod, 'ohbother_NewPacketSequenceSender', retval('int64_t'), [param('int64_t', 'cfg'), param('int64_t', 'rateLimit')])
add_checked_function(mod, 'ohbother_NewBytePacket', retval('int64_t'), [param('int64_t', 'data')])
add_checked_function(mod, 'ohbother_NewDefaultConfig', retval('int64_t'), [param('char*', 'iface'), param('char*', 'srcMAC'), param('char*', 'dstMAC'), param('char*', 'srcIP'), param('char*', 'dstIP'), param('int64_t', 'srcPort'), param('int64_t', 'dstPort'), param('char*', 'bpf'), param('int64_t', 'SnapLen'), param('bool', 'Promisc'), param('int64_t', 'BufferSize'), param('bool', 'ImmediateMode')])
add_checked_function(mod, 'ohbother_DeleteSliceBytes', None, [param('int64_t', 'handle'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_LogDebug', None, [param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_LogError', None, [param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_LogWarn', None, [param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_BenchmarkSend', retval('double'), [param('int64_t', 'cfg'), param('int64_t', 'packetCount'), param('int64_t', 'payloadSize'), param('int64_t', 'rateLimit')])
add_checked_function(mod, 'ohbother_PayloadNative', retval('int64_t'), [param('char*', 'pyPayload')])
add_checked_function(mod, 'ohbother_ReceivePacketsByCountSync', retval('int64_t'), [param('int64_t', 'cfg'), param('int64_t', 'count'), param('double', 'timeout')])
add_checked_function(mod, 'ohbother_SendByteArrays', retval('char*'), [param('int64_t', 'cfg'), param('int64_t', 'bytePayloads'), param('int64_t', 'rateLimit')])
add_checked_function(mod, 'ohbother_SendPacket', retval('char*'), [param('int64_t', 'cfg'), param('int64_t', 'payload'), param('int64_t', 'rateLimit')])
add_checked_function(mod, 'ohbother_LogInfo', None, [param('char*', 'format'), param('int64_t', 'args'), param('bool', 'goRun')])
add_checked_function(mod, 'ohbother_NewSliceByteFromBytes', retval('int64_t'), [param('int64_t', 'data')])
add_checked_function(mod, 'ohbother_ReceivePacketsByTimeSync', retval('int64_t'), [param('int64_t', 'cfg'), param('double', 'duration')])
add_checked_function(mod, 'ohbother_SendPackets', retval('char*'), [param('int64_t', 'cfg'), param('char*', 'rawPayloads'), param('int64_t', 'rateLimit')])
add_checked_function(mod, 'ohbother_BatchConvertPythonBytesToSlices', retval('int64_t'), [param('int64_t', 'rawBytes'), param('int64_t', 'numWorkers')])

mod.generate(open('ohbother.c', 'w'))

