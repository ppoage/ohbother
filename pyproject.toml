[build-system]
requires = ["poetry-core>=1.0.0", "wheel", "setuptools", "PyBindGen =0.22.1"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ohbother"
version = "0.0.2"
description = "High-performance packet processing library"
authors = ["ppoage"]
readme = "README.md"
license = "MIT"

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

#include = [
#    { path = "/ohbother/generated/", format = "sdist" }
#]

# Expose build.py as a CLI command
[tool.poetry.scripts]
build = "build:main"


[tool.poetry.dependencies]
python = ">=3.10"


# Include everything under ohbother
[[tool.poetry.include]]
path = "ohbother/**/*"
format = ["wheel"]

[[tool.poetry.include]]
path = "ohbother/generated/**"
format = ["wheel"]

# Include compiled extension modules (so, dylib, dll, pyd, etc.)
#[[tool.poetry.include]]
# The pattern below will match fast_utils built extension regardless of its file extension.
#path = "ohbother/fast_utils.*"
#format = ["wheel"]

# Additional explicit includes for generated files
[[tool.poetry.include]]
path = "ohbother/generated/*.so"
format = ["wheel"]

[[tool.poetry.include]]
path = "ohbother/generated/*.dylib"
format = ["wheel"]

[[tool.poetry.include]]
path = "ohbother/generated/*.dll"
format = ["wheel"]

[[tool.poetry.include]]
path = "ohbother/generated/*.pyd"
format = ["wheel"]

#[tool.poetry.build]
#script = "build_cython.py"